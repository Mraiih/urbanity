#!/usr/bin/env ruby

require 'colorize'
require 'net/http'
require 'tty-progressbar'
require 'nhentai-api'
require 'optparse'

# CONSTANTS
DONE      = 'DONE'.colorize(:green)
ERROR     = 'ERROR'.colorize(:red)
FINISHED  = 'DOWNLOAD FINISHED'.colorize(:blue)

# FUNCTIONS
def create_folder(id)
  Dir.mkdir(id)
  puts "[#{DONE}] folder #{id} created"
end

def initiate(doujinshi)
  bar = TTY::ProgressBar.new('downloading [:bar] :current / :total | ETA: :eta',
                             total: doujinshi.count_pages, width: 50, head: '>')

  create_folder(doujinshi.id)
  doujinshi.pages.each_with_index { |page, index| download(doujinshi.id, page, index + 1, bar) }
  puts "[#{FINISHED}]"
end

def download(id, page, index, bar)
  client    = Net::HTTP.get_response(URI(page))
  extention = page.slice(page.length - 3..page.length)

  File.open("#{id}/#{index}.#{extention}", 'wb') { |file| file.puts client.body }
  bar.advance(1)
end

def put_message(message)
  puts message
  exit
end

# ARGUMENTS
options = {}
begin
  OptionParser.new do |opts|
    opts.banner = "Usage: urbanity [options] [id]"

    opts.on '-r', '--rename [name]', String, 'Define a folder name' do |value|
      options[:rename] = value
    end

    opts.on '-f', '--from [page]', Integer, 'Starting range' do |value|
      options[:from] = value
    end

    opts.on '-t', '--to [page]', Integer, 'Ending range' do |value|
      options[:to] = value
    end

    opts.on '-m', '--mirror [link]', String, 'Use a mirror' do |value|
      options[:mirror] = value
    end

    opts.on '-h', '--help', 'Show this help' do
      puts opts
      exit
    end
  end.parse!
rescue OptionParser::InvalidOption
  puts 'Warning: Invalid option'
  exit
end

# MULTIPLES DOUJINSHI
doujinshi_list = ARGV.map { |doujinshi| doujinshi if doujinshi.match(/\d+/) }

doujinshi_list.each do |id|
  doujinshi = Doujinshi.new(id)
  unless doujinshi.exists?
    puts "[#{ERROR}] This doujinshi does not exist: #{id}"
    next
  end

  if File.exist?(id)
    puts "[#{ERROR}] Folder already exist"
  else
    initiate(doujinshi)
  end
end
